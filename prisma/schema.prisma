generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma/"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id        String      @id @default(cuid())
  nama      String
  email     String      @unique
  nim       String?
  nid       String?
  password  String
  role      String      @default("mahasiswa")
  status    String      @default("active")
  createdAt DateTime    @default(now())
  updatedAt DateTime?   @updatedAt
  Reservasi Reservasi[]
}

model Book {
  id            Int         @id @default(autoincrement())
  judul         String
  isbn          String      @unique
  deskripsi     String?
  tahunTerbit   Int
  penerbit      String?
  jumlahHalaman Int?
  bahasa        String?
  sampul        String?
  tersedia      Boolean     @default(true)
  stok          Int         @default(1)
  penulisId     Int
  kategoriId    Int
  penulis       Author      @relation(fields: [penulisId], references: [id])
  kategori      Category    @relation(fields: [kategoriId], references: [id])
  createdAt     DateTime    @default(now())
  updatedAt     DateTime?   @updatedAt
  Reservasi     Reservasi[]
}

model Author {
  id        Int       @id @default(autoincrement())
  nama      String
  bio       String?
  buku      Book[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Category {
  id        Int       @id @default(autoincrement())
  nama      String    @unique
  deskripsi String?
  buku      Book[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Reservasi {
  id             Int       @id @default(autoincrement())
  userId         String
  bookId         Int
  tanggalPinjam  DateTime  @default(now())
  tanggalKembali DateTime?
  tanggalAmbil   DateTime?
  jamAmbil       String?
  status         String    @default("reservasi")
  catatanAdmin   String?
  denda          Int       @default(0)
  user           User      @relation(fields: [userId], references: [id])
  book           Book      @relation(fields: [bookId], references: [id])

  @@map("reservasi")
}
