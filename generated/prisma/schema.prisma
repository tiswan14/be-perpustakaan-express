generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma/"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
  id         String       @id @default(cuid())
  nama       String
  email      String       @unique
  nim        String?
  nid        String?
  password   String
  role       String       @default("mahasiswa")
  status     String       @default("active")
  createdAt  DateTime     @default(now())
  updatedAt  DateTime?    @updatedAt
  Reservasi  Reservasi[]
  Peminjaman Peminjaman[]
}

model Book {
  id          Int          @id @default(autoincrement())
  judul       String
  deskripsi   String?
  isbn        String       @unique
  penerbit    String?
  tahunTerbit Int
  penulis     String?
  image       String?
  kategoriId  Int
  stok        Int          @default(1)
  status      String       @default("tersedia")
  kategori    Category     @relation(fields: [kategoriId], references: [id])
  Reservasi   Reservasi[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime?    @updatedAt
  Peminjaman  Peminjaman[]
}

model Category {
  id        Int       @id @default(autoincrement())
  nama      String    @unique
  buku      Book[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
}

model Reservasi {
  id           Int      @id @default(autoincrement())
  userId       String
  bookId       Int
  tanggalAmbil DateTime @default(now())
  jamAmbil     String?
  catatan      String?
  status       String   @default("reservasi")

  user       User        @relation(fields: [userId], references: [id])
  book       Book        @relation(fields: [bookId], references: [id])
  peminjaman Peminjaman?
}

model Peminjaman {
  id                Int       @id @default(autoincrement())
  reservasiId       Int       @unique
  tanggalPinjam     DateTime  @default(now())
  tanggalJatuhTempo DateTime
  tanggalKembali    DateTime?
  status            String?   @default("dipinjam")
  denda             Int       @default(0)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime? @updatedAt

  reservasi Reservasi @relation(fields: [reservasiId], references: [id])
  User      User?     @relation(fields: [userId], references: [id])
  userId    String?
  Book      Book?     @relation(fields: [bookId], references: [id])
  bookId    Int?
}
